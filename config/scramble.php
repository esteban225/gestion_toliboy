<?php

use Dedoc\Scramble\Http\Middleware\RestrictedDocsAccess;

return [
    /*
     * Ruta base de la API. Todas las rutas que comiencen con este prefijo se incluir√°n en la documentaci√≥n.
     */
    'api_path' => 'api',

    /*
     * Dominio de la API. Si es null, se usar√° el dominio principal de la app.
     */
    'api_domain' => null,

    /*
     * Ruta donde se exportar√° el archivo OpenAPI (JSON).
     */
    'export_path' => 'api.json',

    'info' => [
        /*
         * Versi√≥n de la API.
         */
        'version' => env('API_VERSION', '1.0.0'),

        /*
         * Descripci√≥n mostrada en la p√°gina principal de la documentaci√≥n.
         */
        'description' => '
            # Gesti√≥n Toliboy

            ## üìã Descripci√≥n General del Proyecto

            **Gesti√≥n Toliboy** es un sistema de gesti√≥n empresarial completo dise√±ado espec√≠ficamente para empresas de producci√≥n, especialmente panader√≠as y pasteler√≠as. Es una API REST robusta construida con Laravel 10 que implementa una **Arquitectura Limpia (Clean Architecture)** para garantizar escalabilidad, mantenibilidad y separaci√≥n clara de responsabilidades.

            ---

            ## üéØ Objetivos y Prop√≥sito

            El sistema est√° dise√±ado para digitalizar y automatizar completamente los procesos de una empresa de producci√≥n, eliminando el uso de papel y hojas de c√°lculo. Su objetivo principal es proporcionar:

            - **Trazabilidad completa** de todos los procesos productivos
            - **Control de calidad riguroso** mediante formularios din√°micos
            - **Gesti√≥n de inventario en tiempo real** con alertas autom√°ticas
            - **Seguimiento de personal** con registros de entrada/salida automatizados
            - **Reportes ejecutivos** para toma de decisiones basada en datos
            - **Notificaciones autom√°ticas** para eventos cr√≠ticos del negocio

            ---

            ## üèóÔ∏è Arquitectura del Sistema

            El proyecto implementa **Domain Driven Design (DDD)** con una estructura modular que separa claramente las responsabilidades:

            ### Capas de la Arquitectura

            1. **Capa de Presentaci√≥n (HTTP)**: Controladores, requests de validaci√≥n, recursos de respuesta
            2. **Capa de Aplicaci√≥n**: Casos de uso espec√≠ficos del negocio, DTOs, handlers de eventos
            3. **Capa de Dominio**: Entidades de negocio, interfaces de repositorio, servicios de dominio
            4. **Capa de Infraestructura**: Implementaciones con Eloquent, cache, colas, almacenamiento

            ### M√≥dulos Principales

            - **Auth**: Manejo de autenticaci√≥n JWT y autorizaci√≥n por roles
            - **WorkLogs**: Registro autom√°tico de asistencia y horas trabajadas
            - **Forms**: Sistema de formularios din√°micos para control de calidad
            - **Inventory**: Gesti√≥n completa de inventario y materias primas
            - **Notifications**: Sistema de notificaciones autom√°ticas en tiempo real
            - **Reports**: Generaci√≥n de reportes avanzados en m√∫ltiples formatos
            - **Batches**: Control de lotes de producci√≥n con trazabilidad completa

            ---

            ## üöÄ Funcionalidades Clave

            ### Sistema de Autenticaci√≥n y Roles

            - Autenticaci√≥n JWT con tokens de acceso y renovaci√≥n
            - Cinco roles espec√≠ficos: **Desarrollador (DEV)**, **Gerente General (GG)**, **Ingenieros (INGPL/INGPR)**, **Trazabilidad (TRZ)**, **Operarios (OP)**
            - Permisos granulares por m√≥dulo y acci√≥n
            - Sesiones activas con control de dispositivos m√∫ltiples

            ### Formularios Din√°micos Inteligentes

            - Creaci√≥n de formularios completamente personalizables
            - Campos de m√∫ltiples tipos: texto, n√∫meros, fechas, selecciones, archivos, checkboxes
            - Validaci√≥n din√°mica basada en reglas configurables
            - Workflow de aprobaci√≥n: **Pendiente ‚Üí En Progreso ‚Üí Completado ‚Üí Aprobado/Rechazado**
            - Vinculaci√≥n autom√°tica a lotes de producci√≥n
            - Historial completo de cambios y revisiones

            ### Control de Asistencia Automatizado (WorkLogs)

            - Registro autom√°tico de entrada y salida de personal
            - Detecci√≥n de ausencias con notificaciones autom√°ticas a supervisores
            - C√°lculo autom√°tico de horas trabajadas y extras
            - Alertas por exceso de horas trabajadas
            - Reportes de asistencia personalizables por per√≠odo

            ### Gesti√≥n Inteligente de Inventario

            - Stock en tiempo real con actualizaciones autom√°ticas
            - Alertas de bajo stock configurables por producto
            - Movimientos autom√°ticos (entrada, salida, ajustes, transferencias)
            - Trazabilidad completa de materias primas en productos
            - Predicciones de consumo basadas en hist√≥ricos
            - Integraci√≥n con lotes de producci√≥n

            ### Sistema de Notificaciones Avanzado

            - Eventos autom√°ticos disparados por cambios en el sistema
            - M√∫ltiples canales: en aplicaci√≥n, email, SMS (configurable)
            - Tipos de notificaci√≥n: informaci√≥n, advertencia, cr√≠tica, urgente
            - Filtrado inteligente para evitar spam de notificaciones
            - Programaci√≥n autom√°tica de verificaciones diarias

            ### Reportes Ejecutivos y Analytics

            - Dashboard interactivo con m√©tricas clave en tiempo real
            - Reportes personalizables por fecha, usuario, lote, producto
            - Exportaci√≥n m√∫ltiple: PDF, Excel, CSV
            - Gr√°ficos de tendencias de producci√≥n, calidad, inventario
            - KPIs autom√°ticos: eficiencia, defectos, rotaci√≥n de inventario
            - Reportes programados con env√≠o autom√°tico

            ---

            ## üõ†Ô∏è Tecnolog√≠as y Herramientas

            ### Stack Tecnol√≥gico

            - **Backend**: Laravel 10 con PHP 8.1+
            - **Base de Datos**: MySQL 8.0 con optimizaciones de rendimiento
            - **Autenticaci√≥n**: JWT con refresh tokens
            - **Cache**: Redis para consultas frecuentes
            - **Colas**: Sistema de jobs para procesos pesados
            - **Storage**: Soporte para archivos locales y S3
            - **Testing**: PHPUnit y Pest para testing completo
            - **Documentaci√≥n**: Scramble para documentaci√≥n API autom√°tica

            ### Dependencias Especializadas

            - **Roles y Permisos**: Spatie Laravel Permission
            - **Exportaci√≥n**: Maatwebsite Excel para reportes
            - **Im√°genes**: Intervention Image para procesamiento
            - **Validaci√≥n**: Validadores personalizados din√°micos
            - **Eventos**: Sistema robusto de events/listeners

            ---

            ## üìä Flujo de Trabajo T√≠pico

            1. Usuario se autentica con credenciales (JWT generado)
            2. Accede al dashboard con m√©tricas seg√∫n su rol
            3. Operario registra asistencia autom√°ticamente
            4. Inicia lote de producci√≥n asignando formularios de calidad
            5. Durante producci√≥n completa formularios din√°micos
            6. Sistema valida autom√°ticamente respuestas seg√∫n reglas configuradas
            7. Movimientos de inventario se registran autom√°ticamente
            8. Supervisor revisa y aprueba formularios completados
            9. Sistema genera notificaciones para eventos cr√≠ticos
            10. Reportes autom√°ticos se generan al final del d√≠a

            ---

            ## üîí Seguridad y Compliance

            ### Medidas de Seguridad

            - Autenticaci√≥n JWT con expiraci√≥n configurable
            - Rate limiting para prevenir ataques de fuerza bruta
            - Validaci√≥n exhaustiva de todos los inputs
            - Sanitizaci√≥n de datos de salida
            - Logs de auditor√≠a para todas las acciones cr√≠ticas
            - Encriptaci√≥n de datos sensibles
            - HTTPS obligatorio en producci√≥n

            ### Trazabilidad y Auditor√≠a

            - Log completo de todas las acciones de usuarios
            - Historial de cambios en formularios y lotes
            - Rastreo de movimientos de inventario
            - Timestamps autom√°ticos en todas las operaciones
            - Respaldos autom√°ticos de base de datos

            ---

            ## üéØ Beneficios para el Negocio

            ### Operacionales

            - Reducci√≥n del **90%** en uso de papel
            - Eliminaci√≥n de errores de transcripci√≥n manual
            - Tiempo de respuesta **80% m√°s r√°pido** en reportes
            - Trazabilidad **100% digital** de todos los procesos
            - Notificaciones inmediatas de problemas cr√≠ticos

            ### Estrat√©gicos

            - Datos en tiempo real para toma de decisiones
            - Cumplimiento autom√°tico de normas de calidad
            - Reducci√≥n de costos operativos significativa
            - Escalabilidad para crecimiento futuro
            - Integraci√≥n f√°cil con otros sistemas

            ---

            ## üìù Licencia

            Este proyecto es propiedad de Toliboy y est√° protegido por derechos de autor.

            ---

            ## üë• Contacto

            Para m√°s informaci√≥n sobre el proyecto Gesti√≥n Toliboy, contacta al equipo de desarrollo.
        ',
    ],

    /*
     * Personalizaci√≥n de la interfaz de la documentaci√≥n (UI).
     */
    'ui' => [
        'title' => 'Toliboy API Docs', // T√≠tulo que se muestra en la interfaz de la documentaci√≥n.
        'theme' => 'dark', // Tema visual de la interfaz; en este caso, modo oscuro.
        'hide_try_it' => false, // Si es true, oculta el bot√≥n "Probar" en la documentaci√≥n.
        'hide_schemas' => false, // Si es true, oculta la secci√≥n de esquemas de la API.
        'logo' => '/resources/img/carita.svg', // Ruta al logo personalizado que se muestra en la UI.
        'try_it_credentials_policy' => 'include', // Pol√≠tica de env√≠o de credenciales (cookies, auth) en las pruebas de endpoints.
        'layout' => 'responsive', // Tipo de dise√±o de la interfaz: 'sidebar', 'responsive' o 'stacked'.
    ],

    /*
     * Servidores configurados para pruebas desde la doc.
     */
    'servers' => [
        'Producci√≥n' => 'https://api.toliboy.com/api',
        'Staging' => 'https://staging.toliboy.com/api',
        'AWS' => 'http://3.82.17.57/api',
        'Local' => 'http://127.0.0.1:8000/api',
        'docker' => 'http://localhost/api', // si usas docker y quieres probar desde otro contenedor    
    ],

    /*
     * Estrategia para mostrar las descripciones de enums.
     */
    'enum_cases_description_strategy' => 'description',

    /*
     * Middleware que protege la ruta de los docs.
     */
    'middleware' => [
        'web',
        RestrictedDocsAccess::class,
        'auth', // puedes descomentar esto si quieres exigir login
        'can:viewApiDocs', // o usar permisos personalizados
    ],

    'extensions' => [],
];
