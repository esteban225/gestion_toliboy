{
    "openapi": "3.1.0",
    "info": {
        "title": "Toliboy API Docs",
        "version": "1.0.0",
        "description": "\n            \ud83d\udcd8 Bienvenido a la documentaci\u00f3n de la **API de Gesti\u00f3n Toliboy**.\n\n            La API permite a aplicaciones m\u00f3viles y servicios externos integrarse con el sistema de gesti\u00f3n,\n            ofreciendo funcionalidades clave como:\n\n            - \ud83d\udc64 **Autenticaci\u00f3n y gesti\u00f3n de usuarios**\n            - \ud83d\udce6 **Productos y categor\u00edas**\n            - \ud83d\uded2 **Pedidos y facturaci\u00f3n electr\u00f3nica**\n            - \ud83d\udcca **Reportes y estad\u00edsticas**\n\n            \u26a0\ufe0f **Nota importante:**\n            - Todos los endpoints protegidos requieren autenticaci\u00f3n v\u00eda **Bearer Token (JWT)**.\n            - Revisa cada secci\u00f3n para ver par\u00e1metros, ejemplos de respuestas y posibles errores.\n\n            \ud83d\udc49 Si necesitas ayuda, contacta con el equipo de soporte de Toliboy.\n        "
    },
    "servers": [
        {
            "url": "http://localhost:8000/api",
            "description": "Local"
        },
        {
            "url": "https://staging.toliboy.com/api",
            "description": "Staging"
        },
        {
            "url": "https://toliboy.com/api",
            "description": "Producci\u00f3n"
        }
    ],
    "paths": {
        "/login": {
            "post": {
                "operationId": "auth.login",
                "description": "Inicia sesi\u00f3n con email y contrase\u00f1a, devuelve un token JWT.",
                "summary": "Iniciar sesi\u00f3n",
                "tags": [
                    "Auth"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/data/me": {
            "get": {
                "operationId": "auth.me",
                "description": "Devuelve la informaci\u00f3n del usuario autenticado mediante el token JWT.",
                "summary": "Obtener usuario autenticado",
                "tags": [
                    "Auth"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "operationId": "auth.register",
                "description": "Registra un nuevo usuario en el sistema.",
                "summary": "Registrar usuario",
                "tags": [
                    "Auth"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        201
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/auth/refresh": {
            "post": {
                "operationId": "auth.refresh",
                "description": "Devuelve un nuevo token JWT a partir de uno v\u00e1lido.",
                "summary": "Refrescar token",
                "tags": [
                    "Auth"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "operationId": "auth.logout",
                "description": "Invalida el token actual y cierra la sesi\u00f3n del usuario.",
                "summary": "Cerrar sesi\u00f3n",
                "tags": [
                    "Auth"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/batche": {
            "get": {
                "operationId": "batche.index",
                "description": "Obtiene una lista de lotes con filtros opcionales.",
                "summary": "Listar lotes",
                "tags": [
                    "Batche"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "operationId": "batche.store",
                "description": "Registra un nuevo lote en el sistema.",
                "summary": "Crear lote",
                "tags": [
                    "Batche"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App.Modules.Batches.Http.Requests.RegisterRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        201
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/batche/{id}": {
            "get": {
                "operationId": "batche.show",
                "description": "Obtiene los detalles de un lote por su ID.",
                "summary": "Mostrar lote",
                "tags": [
                    "Batche"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "operationId": "batche.update",
                "description": "Actualiza los datos de un lote existente.",
                "summary": "Actualizar lote",
                "tags": [
                    "Batche"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            },
            "delete": {
                "operationId": "batche.destroy",
                "description": "Elimina un lote por su ID.",
                "summary": "Eliminar lote",
                "tags": [
                    "Batche"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/dataUsers": {
            "get": {
                "operationId": "dataUser.index",
                "summary": "Listar todos los datos de usuario con posibilidad de filtros",
                "tags": [
                    "DataUser"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Datos de usuario encontrados"
                                            ]
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {}
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "operationId": "dataUser.store",
                "summary": "Crear nuevos datos de usuario",
                "tags": [
                    "DataUser"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App.Modules.DataUser.Http.Requests.RegisterRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Datos de usuario creados exitosamente"
                                            ]
                                        },
                                        "data": {
                                            "type": [
                                                "object",
                                                "null"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Error al crear los datos de usuario"
                                            ]
                                        },
                                        "data": {
                                            "type": "null"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/dataUsers/{id}": {
            "get": {
                "operationId": "dataUser.show",
                "summary": "Consultar datos de usuario por su identificador \u00fanico",
                "tags": [
                    "DataUser"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Identificador \u00fanico de los datos de usuario.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Datos de usuario encontrados"
                                            ]
                                        },
                                        "data": {
                                            "type": [
                                                "object",
                                                "null"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Datos de usuario no encontrados"
                                            ]
                                        },
                                        "data": {
                                            "type": "null"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "operationId": "dataUser.update",
                "summary": "Actualizar datos de usuario existentes",
                "tags": [
                    "DataUser"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App.Modules.DataUser.Http.Requests.RegisterRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Datos de usuario actualizados exitosamente"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Error al actualizar los datos de usuario"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            },
            "delete": {
                "operationId": "dataUser.destroy",
                "summary": "Eliminar datos de usuario por su identificador \u00fanico",
                "tags": [
                    "DataUser"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Identificador \u00fanico de los datos de usuario.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Datos de usuario eliminados exitosamente"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Error al eliminar los datos de usuario"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/forms/{formId}/report/pdf": {
            "get": {
                "operationId": "formReports.pdf",
                "tags": [
                    "FormReports"
                ],
                "parameters": [
                    {
                        "name": "formId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/pdf": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "Transfer-Encoding": {
                                "required": true,
                                "schema": {
                                    "type": "string",
                                    "enum": [
                                        "chunked"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/forms": {
            "get": {
                "operationId": "forms.index",
                "tags": [
                    "Forms"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "string"
                                        },
                                        "rows": {
                                            "type": "array",
                                            "items": {}
                                        }
                                    },
                                    "required": [
                                        "count",
                                        "rows"
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "operationId": "forms.store",
                "tags": [
                    "Forms"
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "id"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/forms/{id}": {
            "get": {
                "operationId": "forms.show",
                "tags": [
                    "Forms"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "operationId": "forms.update",
                "tags": [
                    "Forms"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "updated"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "operationId": "forms.destroy",
                "tags": [
                    "Forms"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "deleted"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/inventory-movements": {
            "get": {
                "operationId": "invMove.index",
                "summary": "Listar todos los movimientos de inventario",
                "tags": [
                    "InvMove"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {}
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "operationId": "invMove.store",
                "summary": "Registrar un nuevo movimiento de inventario",
                "tags": [
                    "InvMove"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App.Modules.InventoryMovements.Http.Requests.RegisterRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to create Inventory Movement"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": [
                                        "object",
                                        "null"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/inventory-movements/{id}": {
            "get": {
                "operationId": "invMove.show",
                "summary": "Mostrar un movimiento de inventario espec\u00edfico por ID",
                "tags": [
                    "InvMove"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Identificador del movimiento de inventario",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Inventory Movement not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": [
                                        "object",
                                        "null"
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "operationId": "invMove.update",
                "summary": "Actualizar un movimiento de inventario existente",
                "tags": [
                    "InvMove"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Identificador del movimiento de inventario a actualizar",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpDateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to update Inventory Movement"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": [
                                        "object",
                                        "null"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            },
            "delete": {
                "operationId": "invMove.destroy",
                "summary": "Eliminar un movimiento de inventario por ID",
                "tags": [
                    "InvMove"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Identificador del movimiento de inventario a eliminar",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Inventory Movement not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Inventory Movement deleted successfully"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/notifications": {
            "get": {
                "operationId": "notifications.user",
                "summary": "Listar notificaciones del usuario autenticado",
                "tags": [
                    "Notification"
                ],
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `NotificationResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/NotificationResource"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "operationId": "notifications.create",
                "summary": "Crear notificaci\u00f3n",
                "tags": [
                    "Notification"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App.Modules.Notifications.Http.Requests.RegisterRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "`NotificationResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotificationResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/notifications/unread": {
            "get": {
                "operationId": "notifications.unread",
                "summary": "Listar notificaciones no le\u00eddas",
                "tags": [
                    "Notification"
                ],
                "responses": {
                    "200": {
                        "description": "Array of `NotificationResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/NotificationResource"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/notifications/{id}": {
            "get": {
                "operationId": "notifications.show",
                "summary": "Obtener notificaci\u00f3n por ID",
                "tags": [
                    "Notification"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`NotificationResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotificationResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Notification not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "operationId": "notifications.update",
                "summary": "Actualizar notificaci\u00f3n",
                "tags": [
                    "Notification"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App.Modules.Notifications.Http.Requests.UpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`NotificationResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotificationResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Notification not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "operationId": "notifications.delete",
                "summary": "Eliminar notificaci\u00f3n",
                "tags": [
                    "Notification"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Notification deleted"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Notification not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/notifications/{id}/read": {
            "patch": {
                "operationId": "notifications.mark-as-read",
                "summary": "Marcar como le\u00edda",
                "tags": [
                    "Notification"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Notification marked as read"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Notification not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/notifications/actions/clean-expired": {
            "delete": {
                "operationId": "notifications.clean-expired",
                "summary": "Eliminar notificaciones expiradas",
                "tags": [
                    "Notification"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "deleted_count": {
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "deleted_count"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/products": {
            "get": {
                "operationId": "products.index",
                "summary": "Muestra una lista de todos los productos",
                "tags": [
                    "Products"
                ],
                "responses": {
                    "500": {
                        "description": "Si ocurre una excepci\u00f3n, retorna el error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Ocurri\u00f3 un error al procesar la solicitud."
                                            ]
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "error"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Si existen productos, retorna los datos",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Productos encontrados"
                                            ]
                                        },
                                        "data": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Si no hay productos registrados",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "No se encuentran productos"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "operationId": "products.store",
                "summary": "Almacena un nuevo producto en la base de datos",
                "tags": [
                    "Products"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "code": {
                                        "type": "string",
                                        "maxLength": 100
                                    },
                                    "category": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "maxLength": 100
                                    },
                                    "description": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    },
                                    "specifications": {
                                        "type": [
                                            "array",
                                            "null"
                                        ],
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "unit_price": {
                                        "type": [
                                            "number",
                                            "null"
                                        ],
                                        "minimum": 0
                                    },
                                    "created_by": {
                                        "type": [
                                            "integer",
                                            "null"
                                        ]
                                    }
                                },
                                "required": [
                                    "name",
                                    "code"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "Si ocurre una excepci\u00f3n, retorna el error\n\nSi no se pudo crear el registro",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "boolean"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Ocurri\u00f3 un error al procesar la solicitud."
                                                    ]
                                                },
                                                "error": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "status",
                                                "message",
                                                "error"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "boolean"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "No se pudo crear el registro"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "status",
                                                "message"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Si se cre\u00f3 correctamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Producto creado exitosamente"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Error de validaci\u00f3n"
                                            ]
                                        },
                                        "errors": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "errors"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/products/{id}": {
            "get": {
                "operationId": "products.show",
                "summary": "Muestra la informaci\u00f3n de un producto espec\u00edfico",
                "tags": [
                    "Products"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Identificador del producto.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Si ocurre una excepci\u00f3n, retorna el error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Ocurri\u00f3 un error al procesar la solicitud."
                                            ]
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "error"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Si no existe, retorna mensaje de error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Producto no encontrado"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Si existe, retorna los datos",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Producto encontrado"
                                            ]
                                        },
                                        "data": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "operationId": "products.update",
                "summary": "Actualiza la informaci\u00f3n de un producto espec\u00edfico en la base de datos",
                "tags": [
                    "Products"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Identificador del producto.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "code": {
                                        "type": "string",
                                        "maxLength": 100
                                    },
                                    "category": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "maxLength": 100
                                    },
                                    "description": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    },
                                    "specifications": {
                                        "type": [
                                            "array",
                                            "null"
                                        ],
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "unit_price": {
                                        "type": [
                                            "number",
                                            "null"
                                        ],
                                        "minimum": 0
                                    },
                                    "is_active": {
                                        "type": "boolean"
                                    },
                                    "created_by": {
                                        "type": [
                                            "integer",
                                            "null"
                                        ]
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "Si ocurre una excepci\u00f3n, retorna el error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Ocurri\u00f3 un error al procesar la solicitud."
                                            ]
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "error"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Retorna respuesta exitosa con los datos actualizados",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Producto actualizado exitosamente"
                                            ]
                                        },
                                        "data": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Si no existe, retorna mensaje de error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Producto no encontrado"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Error de validaci\u00f3n"
                                            ]
                                        },
                                        "errors": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "errors"
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "operationId": "products.destroy",
                "summary": "Elimina un producto espec\u00edfico de la base de datos",
                "tags": [
                    "Products"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Identificador del producto.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Si ocurre una excepci\u00f3n, retorna el error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Ocurri\u00f3 un error al procesar la solicitud."
                                            ]
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "error"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Retorna respuesta exitosa",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Producto eliminado exitosamente"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Si no existe, retorna mensaje de error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Producto no encontrado"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/raw-materials": {
            "get": {
                "operationId": "rawMaterials.index",
                "summary": "Listar todas las materias primas",
                "tags": [
                    "RawMaterials"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {}
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "operationId": "rawMaterials.store",
                "summary": "Crear una nueva materia prima",
                "tags": [
                    "RawMaterials"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App.Modules.RawMaterials.Http.Requests.RegisterRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": [
                                        "object",
                                        "null"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/raw-materials/{id}": {
            "get": {
                "operationId": "rawMaterials.show",
                "summary": "Mostrar una materia prima espec\u00edfica por ID",
                "tags": [
                    "RawMaterials"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Identificador de la materia prima",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Raw Material not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": [
                                        "object",
                                        "null"
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "operationId": "rawMaterials.update",
                "summary": "Actualizar una materia prima existente",
                "tags": [
                    "RawMaterials"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Identificador de la materia prima a actualizar",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App.Modules.RawMaterials.Http.Requests.RegisterRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Raw Material not found or not updated"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Raw Material updated successfully"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            },
            "delete": {
                "operationId": "rawMaterials.destroy",
                "summary": "Eliminar una materia prima",
                "tags": [
                    "RawMaterials"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Identificador de la materia prima",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Raw Material not found or not deleted"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Raw Material deleted successfully"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/reports": {
            "get": {
                "operationId": "reports.index",
                "summary": "Listar reportes disponibles",
                "tags": [
                    "Reports"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/reports/raw-materials": {
            "get": {
                "operationId": "reports.rawMaterials",
                "summary": "Generar reporte de materias primas",
                "tags": [
                    "Reports"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/reports/raw-materials/low-stock": {
            "get": {
                "operationId": "reports.rawMaterialsLowStock",
                "summary": "Generar reporte de stock bajo",
                "tags": [
                    "Reports"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "success": {
                                                    "type": "boolean"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "PDF generado exitosamente"
                                                    ]
                                                },
                                                "format": {
                                                    "type": "string",
                                                    "enum": [
                                                        "pdf"
                                                    ]
                                                },
                                                "report_type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "raw_materials_low_stock"
                                                    ]
                                                },
                                                "download_url": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "success",
                                                "message",
                                                "format",
                                                "report_type",
                                                "download_url"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "success": {
                                                    "type": "boolean"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Excel generado exitosamente"
                                                    ]
                                                },
                                                "format": {
                                                    "type": "string",
                                                    "enum": [
                                                        "excel"
                                                    ]
                                                },
                                                "report_type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "raw_materials_low_stock"
                                                    ]
                                                },
                                                "download_url": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "success",
                                                "message",
                                                "format",
                                                "report_type",
                                                "download_url"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "success": {
                                                    "type": "boolean"
                                                },
                                                "message": {
                                                    "type": "string"
                                                },
                                                "data": {
                                                    "anyOf": [
                                                        {
                                                            "type": "object",
                                                            "properties": {
                                                                "title": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "Reporte de Materias Primas"
                                                                    ]
                                                                },
                                                                "module": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "raw_materials"
                                                                    ]
                                                                },
                                                                "generated_at": {
                                                                    "type": "string"
                                                                },
                                                                "filters_applied": {
                                                                    "type": "array",
                                                                    "items": {}
                                                                },
                                                                "total_items": {
                                                                    "type": "string"
                                                                },
                                                                "summary": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "total_materials": {
                                                                            "type": "string"
                                                                        },
                                                                        "low_stock_count": {
                                                                            "type": "string"
                                                                        },
                                                                        "out_of_stock_count": {
                                                                            "type": "string"
                                                                        },
                                                                        "normal_stock_count": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "total_materials",
                                                                        "low_stock_count",
                                                                        "out_of_stock_count",
                                                                        "normal_stock_count"
                                                                    ]
                                                                },
                                                                "data": {
                                                                    "type": "array",
                                                                    "items": {}
                                                                }
                                                            },
                                                            "required": [
                                                                "title",
                                                                "module",
                                                                "generated_at",
                                                                "filters_applied",
                                                                "total_items",
                                                                "summary",
                                                                "data"
                                                            ]
                                                        },
                                                        {
                                                            "type": "object",
                                                            "properties": {
                                                                "title": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "Materiales con Stock Bajo"
                                                                    ]
                                                                },
                                                                "module": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "raw_materials"
                                                                    ]
                                                                },
                                                                "generated_at": {
                                                                    "type": "string"
                                                                },
                                                                "total_items": {
                                                                    "type": "string"
                                                                },
                                                                "urgent_restock": {
                                                                    "type": "string"
                                                                },
                                                                "data": {
                                                                    "type": "array",
                                                                    "items": {}
                                                                }
                                                            },
                                                            "required": [
                                                                "title",
                                                                "module",
                                                                "generated_at",
                                                                "total_items",
                                                                "urgent_restock",
                                                                "data"
                                                            ]
                                                        },
                                                        {
                                                            "type": "object",
                                                            "properties": {
                                                                "title": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "Dashboard Ejecutivo"
                                                                    ]
                                                                },
                                                                "module": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "dashboard"
                                                                    ]
                                                                },
                                                                "generated_at": {
                                                                    "type": "string"
                                                                },
                                                                "sections": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "raw_materials": {
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "title": {
                                                                                    "type": "string",
                                                                                    "enum": [
                                                                                        "Materias Primas"
                                                                                    ]
                                                                                },
                                                                                "summary": {
                                                                                    "type": "string"
                                                                                },
                                                                                "alerts": {
                                                                                    "type": "object",
                                                                                    "properties": {
                                                                                        "low_stock": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "out_of_stock": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "low_stock",
                                                                                        "out_of_stock"
                                                                                    ]
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "title",
                                                                                "summary",
                                                                                "alerts"
                                                                            ]
                                                                        },
                                                                        "inventory": {
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "title": {
                                                                                    "type": "string",
                                                                                    "enum": [
                                                                                        "Inventario General"
                                                                                    ]
                                                                                },
                                                                                "summary": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "title",
                                                                                "summary"
                                                                            ]
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "raw_materials",
                                                                        "inventory"
                                                                    ]
                                                                },
                                                                "global_alerts": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "critical_items": {
                                                                            "type": "integer",
                                                                            "enum": [
                                                                                0
                                                                            ]
                                                                        },
                                                                        "warnings": {
                                                                            "type": "integer",
                                                                            "enum": [
                                                                                0
                                                                            ]
                                                                        },
                                                                        "info": {
                                                                            "type": "integer",
                                                                            "enum": [
                                                                                0
                                                                            ]
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "critical_items",
                                                                        "warnings",
                                                                        "info"
                                                                    ]
                                                                }
                                                            },
                                                            "required": [
                                                                "title",
                                                                "module",
                                                                "generated_at",
                                                                "sections",
                                                                "global_alerts"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "success",
                                                "message",
                                                "data"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/reports/inventory": {
            "get": {
                "operationId": "reports.inventory",
                "summary": "Generar reporte de inventario",
                "tags": [
                    "Reports"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "success": {
                                                    "type": "boolean"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "PDF generado exitosamente"
                                                    ]
                                                },
                                                "format": {
                                                    "type": "string",
                                                    "enum": [
                                                        "pdf"
                                                    ]
                                                },
                                                "report_type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "inventory"
                                                    ]
                                                },
                                                "download_url": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "success",
                                                "message",
                                                "format",
                                                "report_type",
                                                "download_url"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "success": {
                                                    "type": "boolean"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Excel generado exitosamente"
                                                    ]
                                                },
                                                "format": {
                                                    "type": "string",
                                                    "enum": [
                                                        "excel"
                                                    ]
                                                },
                                                "report_type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "inventory"
                                                    ]
                                                },
                                                "download_url": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "success",
                                                "message",
                                                "format",
                                                "report_type",
                                                "download_url"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "success": {
                                                    "type": "boolean"
                                                },
                                                "message": {
                                                    "type": "string"
                                                },
                                                "data": {
                                                    "anyOf": [
                                                        {
                                                            "type": "object",
                                                            "properties": {
                                                                "title": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "Reporte de Materias Primas"
                                                                    ]
                                                                },
                                                                "module": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "raw_materials"
                                                                    ]
                                                                },
                                                                "generated_at": {
                                                                    "type": "string"
                                                                },
                                                                "filters_applied": {
                                                                    "type": "array",
                                                                    "items": {}
                                                                },
                                                                "total_items": {
                                                                    "type": "string"
                                                                },
                                                                "summary": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "total_materials": {
                                                                            "type": "string"
                                                                        },
                                                                        "low_stock_count": {
                                                                            "type": "string"
                                                                        },
                                                                        "out_of_stock_count": {
                                                                            "type": "string"
                                                                        },
                                                                        "normal_stock_count": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "total_materials",
                                                                        "low_stock_count",
                                                                        "out_of_stock_count",
                                                                        "normal_stock_count"
                                                                    ]
                                                                },
                                                                "data": {
                                                                    "type": "array",
                                                                    "items": {}
                                                                }
                                                            },
                                                            "required": [
                                                                "title",
                                                                "module",
                                                                "generated_at",
                                                                "filters_applied",
                                                                "total_items",
                                                                "summary",
                                                                "data"
                                                            ]
                                                        },
                                                        {
                                                            "type": "object",
                                                            "properties": {
                                                                "title": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "Materiales con Stock Bajo"
                                                                    ]
                                                                },
                                                                "module": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "raw_materials"
                                                                    ]
                                                                },
                                                                "generated_at": {
                                                                    "type": "string"
                                                                },
                                                                "total_items": {
                                                                    "type": "string"
                                                                },
                                                                "urgent_restock": {
                                                                    "type": "string"
                                                                },
                                                                "data": {
                                                                    "type": "array",
                                                                    "items": {}
                                                                }
                                                            },
                                                            "required": [
                                                                "title",
                                                                "module",
                                                                "generated_at",
                                                                "total_items",
                                                                "urgent_restock",
                                                                "data"
                                                            ]
                                                        },
                                                        {
                                                            "type": "object",
                                                            "properties": {
                                                                "title": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "Dashboard Ejecutivo"
                                                                    ]
                                                                },
                                                                "module": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "dashboard"
                                                                    ]
                                                                },
                                                                "generated_at": {
                                                                    "type": "string"
                                                                },
                                                                "sections": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "raw_materials": {
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "title": {
                                                                                    "type": "string",
                                                                                    "enum": [
                                                                                        "Materias Primas"
                                                                                    ]
                                                                                },
                                                                                "summary": {
                                                                                    "type": "string"
                                                                                },
                                                                                "alerts": {
                                                                                    "type": "object",
                                                                                    "properties": {
                                                                                        "low_stock": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "out_of_stock": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "low_stock",
                                                                                        "out_of_stock"
                                                                                    ]
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "title",
                                                                                "summary",
                                                                                "alerts"
                                                                            ]
                                                                        },
                                                                        "inventory": {
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "title": {
                                                                                    "type": "string",
                                                                                    "enum": [
                                                                                        "Inventario General"
                                                                                    ]
                                                                                },
                                                                                "summary": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "title",
                                                                                "summary"
                                                                            ]
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "raw_materials",
                                                                        "inventory"
                                                                    ]
                                                                },
                                                                "global_alerts": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "critical_items": {
                                                                            "type": "integer",
                                                                            "enum": [
                                                                                0
                                                                            ]
                                                                        },
                                                                        "warnings": {
                                                                            "type": "integer",
                                                                            "enum": [
                                                                                0
                                                                            ]
                                                                        },
                                                                        "info": {
                                                                            "type": "integer",
                                                                            "enum": [
                                                                                0
                                                                            ]
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "critical_items",
                                                                        "warnings",
                                                                        "info"
                                                                    ]
                                                                }
                                                            },
                                                            "required": [
                                                                "title",
                                                                "module",
                                                                "generated_at",
                                                                "sections",
                                                                "global_alerts"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "success",
                                                "message",
                                                "data"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/reports/dashboard": {
            "get": {
                "operationId": "reports.dashboard",
                "summary": "Generar dashboard ejecutivo",
                "tags": [
                    "Reports"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/roles/{id}": {
            "get": {
                "operationId": "roles.getById",
                "description": "Recupera la informaci\u00f3n de un rol espec\u00edfico seg\u00fan su identificador.",
                "summary": "Obtener un rol por ID",
                "tags": [
                    "Roles"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "operationId": "roles.update",
                "description": "Permite modificar los datos de un rol.",
                "summary": "Actualizar un rol existente",
                "tags": [
                    "Roles"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App.Modules.Roles.Http.Requests.RegisterRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            },
            "delete": {
                "operationId": "roles.delete",
                "description": "Elimina un rol del sistema.",
                "summary": "Eliminar un rol",
                "tags": [
                    "Roles"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/roles": {
            "get": {
                "operationId": "roles.list",
                "description": "Devuelve una lista de roles registrados en el sistema.\nSe puede aplicar filtrado opcional por nombre o descripci\u00f3n.",
                "summary": "Listar roles",
                "tags": [
                    "Roles"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "operationId": "roles.create",
                "description": "Registra un rol en el sistema.",
                "summary": "Crear un nuevo rol",
                "tags": [
                    "Roles"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App.Modules.Roles.Http.Requests.RegisterRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        201
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/users": {
            "get": {
                "operationId": "users.index",
                "summary": "Listar todos los usuarios con posibilidad de filtros",
                "tags": [
                    "Users"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Usuarios encontrados"
                                            ]
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {}
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "operationId": "users.store",
                "summary": "Crear un nuevo usuario",
                "tags": [
                    "Users"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App.Modules.Users.Http.Requests.RegisterRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Usuario creado"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Error al crear el usuario"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "operationId": "users.show",
                "summary": "Consultar usuario por su identificador \u00fanico",
                "tags": [
                    "Users"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Identificador del usuario.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Usuario encontrado"
                                            ]
                                        },
                                        "data": {
                                            "type": [
                                                "object",
                                                "null"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Usuario no encontrado"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "operationId": "users.update",
                "summary": "Actualizar un usuario existente",
                "tags": [
                    "Users"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Identificador del usuario a actualizar.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App.Modules.Users.Http.Requests.RegisterRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "ok"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Usuario no encontrado o no actualizado"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            },
            "delete": {
                "operationId": "users.destroy",
                "summary": "Eliminar un usuario por ID",
                "tags": [
                    "Users"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "Identificador del usuario a eliminar.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "ok"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Usuario no encontrado o no eliminado"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/work-logs": {
            "get": {
                "operationId": "workLog.index",
                "description": "Devuelve todos los work logs o los del usuario indicado.",
                "summary": "Listar work logs",
                "tags": [
                    "WorkLog"
                ],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "operationId": "workLog.store",
                "description": "Registra un nuevo work log.",
                "summary": "Crear work log",
                "tags": [
                    "WorkLog"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App.Modules.WorkLogs.Http.Requests.RegisterRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        201
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/work-logs/{id}": {
            "get": {
                "operationId": "workLog.show",
                "description": "Obtiene los detalles de un work log por su ID.",
                "summary": "Mostrar work log",
                "tags": [
                    "WorkLog"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "operationId": "workLog.update",
                "description": "Actualiza un work log existente. start_time y end_time deben mantenerse en formato HH:MM si se env\u00edan.",
                "summary": "Actualizar work log",
                "tags": [
                    "WorkLog"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/App.Modules.WorkLogs.Http.Requests.UpDateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            },
            "delete": {
                "operationId": "workLog.destroy",
                "description": "Borra un work log por su ID.",
                "summary": "Eliminar work log",
                "tags": [
                    "WorkLog"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/{userId}/work-logs": {
            "get": {
                "operationId": "workLog.showUserWorkLogs",
                "description": "Devuelve los work logs del usuario indicado.",
                "summary": "Listar work logs de un usuario",
                "tags": [
                    "WorkLog"
                ],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [
                                        200
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "App.Modules.Batches.Http.Requests.RegisterRequest": {
                "type": "object",
                "description": "RegisterRequest gestiona la validaci\u00f3n de datos para el registro de lotes.\n\nPrincipio SOLID aplicado:\n- SRP (Single Responsibility Principle): Esta clase se encarga exclusivamente de la validaci\u00f3n y autorizaci\u00f3n\n  de la solicitud de registro, manteniendo su responsabilidad clara y \u00fanica.\n\nNo implementa otros principios SOLID directamente, pero su dise\u00f1o facilita la extensi\u00f3n y el mantenimiento.",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "code": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "product_id": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "start_date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "expected_end_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "actual_end_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "status": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "quantity": {
                        "type": "integer",
                        "minimum": 1
                    },
                    "defect_quantity": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "minimum": 0
                    },
                    "notes": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "created_by": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    }
                },
                "required": [
                    "name",
                    "code",
                    "start_date",
                    "status",
                    "quantity"
                ],
                "title": "App.Modules.Batches.Http.Requests.RegisterRequest"
            },
            "App.Modules.DataUser.Http.Requests.RegisterRequest": {
                "type": "object",
                "description": "RegisterRequest gestiona la validaci\u00f3n de datos para el registro de usuarios.\n\nPrincipio SOLID aplicado:\n- SRP (Single Responsibility Principle): Esta clase se encarga exclusivamente de la validaci\u00f3n y autorizaci\u00f3n\n  de la solicitud de registro, manteniendo su responsabilidad clara y \u00fanica.\n\nNo implementa otros principios SOLID directamente, pero su dise\u00f1o facilita la extensi\u00f3n y el mantenimiento.",
                "properties": {
                    "user_id": {
                        "type": "integer"
                    },
                    "num_phone": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 20
                    },
                    "num_phone_alt": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 20
                    },
                    "num_identification": {
                        "type": "string",
                        "description": "'personal_data' is likely a typo, it should be 'personal_data'",
                        "maxLength": 50
                    },
                    "identification_type": {
                        "type": "string",
                        "maxLength": 45
                    },
                    "address": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 45
                    },
                    "emergency_contact": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "emergency_phone": {
                        "type": "string",
                        "maxLength": 25
                    }
                },
                "required": [
                    "user_id",
                    "num_identification",
                    "identification_type",
                    "emergency_contact",
                    "emergency_phone"
                ],
                "title": "App.Modules.DataUser.Http.Requests.RegisterRequest"
            },
            "App.Modules.InventoryMovements.Http.Requests.RegisterRequest": {
                "type": "object",
                "description": "RegisterRequest gestiona la validaci\u00f3n de datos para el registro de usuarios.\n\nPrincipio SOLID aplicado:\n- SRP (Single Responsibility Principle): Esta clase se encarga exclusivamente de la validaci\u00f3n y autorizaci\u00f3n\n  de la solicitud de registro, manteniendo su responsabilidad clara y \u00fanica.\n\nNo implementa otros principios SOLID directamente, pero su dise\u00f1o facilita la extensi\u00f3n y el mantenimiento.",
                "properties": {
                    "raw_material_id": {
                        "type": "integer"
                    },
                    "batch_id": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "movement_type": {
                        "type": "string",
                        "enum": [
                            "IN",
                            "OUT",
                            "ADJUSTMENT"
                        ]
                    },
                    "quantity": {
                        "type": "number",
                        "minimum": 0.01
                    },
                    "unit_cost": {
                        "type": "number",
                        "minimum": 0
                    },
                    "notes": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "created_by": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    }
                },
                "required": [
                    "raw_material_id",
                    "movement_type",
                    "quantity",
                    "unit_cost"
                ],
                "title": "App.Modules.InventoryMovements.Http.Requests.RegisterRequest"
            },
            "App.Modules.Notifications.Http.Requests.RegisterRequest": {
                "type": "object",
                "description": "RegisterRequest gestiona la validaci\u00f3n de datos para el registro de usuarios.\n\nPrincipio SOLID aplicado:\n- SRP (Single Responsibility Principle): Esta clase se encarga exclusivamente de la validaci\u00f3n y autorizaci\u00f3n\n  de la solicitud de registro, manteniendo su responsabilidad clara y \u00fanica.\n\nNo implementa otros principios SOLID directamente, pero su dise\u00f1o facilita la extensi\u00f3n y el mantenimiento.",
                "properties": {
                    "user_id": {
                        "type": "integer"
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "message": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "info",
                            "warning",
                            "error",
                            "success"
                        ]
                    },
                    "related_table": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 255
                    },
                    "related_id": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "expires_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date"
                    }
                },
                "required": [
                    "user_id",
                    "title",
                    "message",
                    "type"
                ],
                "title": "App.Modules.Notifications.Http.Requests.RegisterRequest"
            },
            "App.Modules.Notifications.Http.Requests.UpdateRequest": {
                "type": "object",
                "description": "RegisterRequest gestiona la validaci\u00f3n de datos para el registro de usuarios.\n\nPrincipio SOLID aplicado:\n- SRP (Single Responsibility Principle): Esta clase se encarga exclusivamente de la validaci\u00f3n y autorizaci\u00f3n\n  de la solicitud de registro, manteniendo su responsabilidad clara y \u00fanica.\n\nNo implementa otros principios SOLID directamente, pero su dise\u00f1o facilita la extensi\u00f3n y el mantenimiento.",
                "properties": {
                    "user_id": {
                        "type": "integer"
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "message": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "info",
                            "warning",
                            "error",
                            "success"
                        ]
                    },
                    "related_table": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 255
                    },
                    "related_id": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "expires_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date"
                    }
                },
                "title": "App.Modules.Notifications.Http.Requests.UpdateRequest"
            },
            "App.Modules.RawMaterials.Http.Requests.RegisterRequest": {
                "type": "object",
                "description": "RegisterRequest gestiona la validaci\u00f3n de datos para el registro de usuarios.\n\nPrincipio SOLID aplicado:\n- SRP (Single Responsibility Principle): Esta clase se encarga exclusivamente de la validaci\u00f3n y autorizaci\u00f3n\n  de la solicitud de registro, manteniendo su responsabilidad clara y \u00fanica.\n\nNo implementa otros principios SOLID directamente, pero su dise\u00f1o facilita la extensi\u00f3n y el mantenimiento.",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "code": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "description": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "unit_of_measure": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "stock": {
                        "type": "number",
                        "minimum": 0
                    },
                    "min_stock": {
                        "type": [
                            "number",
                            "null"
                        ],
                        "minimum": 0
                    },
                    "is_active": {
                        "type": "boolean"
                    },
                    "created_by": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    }
                },
                "required": [
                    "name",
                    "code",
                    "unit_of_measure",
                    "stock",
                    "is_active"
                ],
                "title": "App.Modules.RawMaterials.Http.Requests.RegisterRequest"
            },
            "App.Modules.Roles.Http.Requests.RegisterRequest": {
                "type": "object",
                "description": "RegisterRequest gestiona la validaci\u00f3n de datos para el registro de usuarios.\n\nPrincipio SOLID aplicado:\n- SRP (Single Responsibility Principle): Esta clase se encarga exclusivamente de la validaci\u00f3n y autorizaci\u00f3n\n  de la solicitud de registro, manteniendo su responsabilidad clara y \u00fanica.\n\nNo implementa otros principios SOLID directamente, pero su dise\u00f1o facilita la extensi\u00f3n y el mantenimiento.",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "description": {
                        "type": "string",
                        "maxLength": 255
                    }
                },
                "required": [
                    "name",
                    "description"
                ],
                "title": "App.Modules.Roles.Http.Requests.RegisterRequest"
            },
            "App.Modules.Users.Http.Requests.RegisterRequest": {
                "type": "object",
                "description": "RegisterRequest gestiona la validaci\u00f3n de datos para el registro de usuarios.\n\nPrincipio SOLID aplicado:\n- SRP (Single Responsibility Principle): Esta clase se encarga exclusivamente de la validaci\u00f3n y autorizaci\u00f3n\n  de la solicitud de registro, manteniendo su responsabilidad clara y \u00fanica.\n\nNo implementa otros principios SOLID directamente, pero su dise\u00f1o facilita la extensi\u00f3n y el mantenimiento.",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "maxLength": 255
                    },
                    "password": {
                        "type": "string",
                        "minLength": 8
                    },
                    "role_id": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "is_active": {
                        "type": [
                            "boolean",
                            "null"
                        ]
                    }
                },
                "required": [
                    "name",
                    "email",
                    "password"
                ],
                "title": "App.Modules.Users.Http.Requests.RegisterRequest"
            },
            "App.Modules.WorkLogs.Http.Requests.RegisterRequest": {
                "type": "object",
                "description": "RegisterRequest gestiona la validaci\u00f3n de datos para el registro de usuarios.\n\nPrincipio SOLID aplicado:\n- SRP (Single Responsibility Principle): Esta clase se encarga exclusivamente de la validaci\u00f3n y autorizaci\u00f3n\n  de la solicitud de registro, manteniendo su responsabilidad clara y \u00fanica.\n\nNo implementa otros principios SOLID directamente, pero su dise\u00f1o facilita la extensi\u00f3n y el mantenimiento.",
                "properties": {
                    "user_id": {
                        "type": "integer"
                    },
                    "date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "start_time": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date"
                    },
                    "end_time": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date"
                    },
                    "batch_id": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "task_description": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 1000
                    },
                    "notes": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 2000
                    }
                },
                "required": [
                    "user_id"
                ],
                "title": "App.Modules.WorkLogs.Http.Requests.RegisterRequest"
            },
            "App.Modules.WorkLogs.Http.Requests.UpDateRequest": {
                "type": "object",
                "description": "RegisterRequest gestiona la validaci\u00f3n de datos para el registro de usuarios.\n\nPrincipio SOLID aplicado:\n- SRP (Single Responsibility Principle): Esta clase se encarga exclusivamente de la validaci\u00f3n y autorizaci\u00f3n\n  de la solicitud de registro, manteniendo su responsabilidad clara y \u00fanica.\n\nNo implementa otros principios SOLID directamente, pero su dise\u00f1o facilita la extensi\u00f3n y el mantenimiento.",
                "properties": {
                    "user_id": {
                        "type": "integer"
                    },
                    "date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "start_time": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date"
                    },
                    "end_time": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date"
                    },
                    "batch_id": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "task_description": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 1000
                    },
                    "notes": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 2000
                    }
                },
                "title": "App.Modules.WorkLogs.Http.Requests.UpDateRequest"
            },
            "LoginRequest": {
                "type": "object",
                "description": "RegisterRequest gestiona la validaci\u00f3n de datos para el registro de usuarios.\n\nPrincipio SOLID aplicado:\n- SRP (Single Responsibility Principle): Esta clase se encarga exclusivamente de la validaci\u00f3n y autorizaci\u00f3n\n  de la solicitud de registro, manteniendo su responsabilidad clara y \u00fanica.\n\nNo implementa otros principios SOLID directamente, pero su dise\u00f1o facilita la extensi\u00f3n y el mantenimiento.",
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "password": {
                        "type": "string",
                        "minLength": 6
                    }
                },
                "required": [
                    "email",
                    "password"
                ],
                "title": "LoginRequest"
            },
            "NotificationResource": {
                "type": "string",
                "title": "NotificationResource"
            },
            "RegisterRequest": {
                "type": "object",
                "description": "RegisterRequest gestiona la validaci\u00f3n de datos para el registro de usuarios.\n\nPrincipio SOLID aplicado:\n- SRP (Single Responsibility Principle): Esta clase se encarga exclusivamente de la validaci\u00f3n y autorizaci\u00f3n\n  de la solicitud de registro, manteniendo su responsabilidad clara y \u00fanica.\n\nNo implementa otros principios SOLID directamente, pero su dise\u00f1o facilita la extensi\u00f3n y el mantenimiento.",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "maxLength": 255
                    },
                    "password": {
                        "type": "string",
                        "minLength": 8
                    }
                },
                "required": [
                    "name",
                    "email",
                    "password"
                ],
                "title": "RegisterRequest"
            },
            "UpDateRequest": {
                "type": "object",
                "description": "RegisterRequest gestiona la validaci\u00f3n de datos para el registro de usuarios.\n\nPrincipio SOLID aplicado:\n- SRP (Single Responsibility Principle): Esta clase se encarga exclusivamente de la validaci\u00f3n y autorizaci\u00f3n\n  de la solicitud de registro, manteniendo su responsabilidad clara y \u00fanica.\n\nNo implementa otros principios SOLID directamente, pero su dise\u00f1o facilita la extensi\u00f3n y el mantenimiento.",
                "properties": {
                    "raw_material_id": {
                        "type": "integer"
                    },
                    "batch_id": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "movement_type": {
                        "type": "string",
                        "enum": [
                            "IN",
                            "OUT",
                            "ADJUSTMENT"
                        ]
                    },
                    "quantity": {
                        "type": "number",
                        "minimum": 0.01
                    },
                    "unit_cost": {
                        "type": "number",
                        "minimum": 0
                    },
                    "notes": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "created_by": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    }
                },
                "title": "UpDateRequest"
            },
            "UpdateRequest": {
                "type": "object",
                "description": "RegisterRequest gestiona la validaci\u00f3n de datos para el registro de lotes.\n\nPrincipio SOLID aplicado:\n- SRP (Single Responsibility Principle): Esta clase se encarga exclusivamente de la validaci\u00f3n y autorizaci\u00f3n\n  de la solicitud de registro, manteniendo su responsabilidad clara y \u00fanica.\n\nNo implementa otros principios SOLID directamente, pero su dise\u00f1o facilita la extensi\u00f3n y el mantenimiento.",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "code": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "product_id": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "start_date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "expected_end_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "actual_end_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "status": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "quantity": {
                        "type": "integer",
                        "minimum": 1
                    },
                    "defect_quantity": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "minimum": 0
                    },
                    "notes": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "created_by": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    }
                },
                "title": "UpdateRequest"
            }
        },
        "responses": {
            "ValidationException": {
                "description": "Validation error",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Errors overview."
                                },
                                "errors": {
                                    "type": "object",
                                    "description": "A detailed description of each field that failed validation.",
                                    "additionalProperties": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "required": [
                                "message",
                                "errors"
                            ]
                        }
                    }
                }
            }
        }
    }
}